{"version":3,"sources":["components/Meeting.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","Meeting","useState","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","id","console","log","data","from","signal","className","playsInline","muted","ref","autoPlay","style","width","TextField","label","variant","value","onChange","e","target","marginBottom","text","Button","color","startIcon","fontSize","onClick","destroy","IconButton","aria-label","peer","Peer","initiator","trickle","emit","userToCall","signalData","callUser","to","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","fontFamily","minHeight","backgroundImage","backgroundRepeat","backgroundSize","appbar","background","appbarWrapper","margin","appbarTitle","flexGrow","icon","colorText","container","textAlign","title","goDown","Header","classes","checked","setChecked","expand","setExpand","onExpand","AppBar","elevation","Toolbar","Collapse","in","timeout","collapsedHeight","href","align","App","CssBaseline","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15b98e72.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Peer from \"simple-peer\";\r\nimport io from \"socket.io-client\";\r\nimport \"./../App.css\";\r\n\r\nconst socket = io.connect(\"http://localhost:5000\");\r\n\r\nconst Meeting = () => {\r\n  const [me, setMe] = useState(\"\");\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        setStream(stream);\r\n        myVideo.current.srcObject = stream;\r\n      });\r\n\r\n    socket.on(\"me\", (id) => {\r\n      console.log(`${id}`)\r\n      setMe(id);\r\n    });\r\n\r\n    socket.on(\"callUser\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setName(data.name);\r\n      setCallerSignal(data.signal);\r\n    });\r\n  }, []);\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"callUser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name: name,\r\n      });\r\n    });\r\n    peer.on(\"stream\", (stream) => {\r\n      userVideo.current.srcObject = stream;\r\n    });\r\n    socket.on(\"callAccepted\", (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answerCall\", { signal: data, to: caller });\r\n    });\r\n    peer.on(\"stream\", (stream) => {\r\n      userVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    connectionRef.current.destroy();\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"video-container\">\r\n          <div className=\"video\">\r\n            {stream && (\r\n              <video\r\n                playsInline\r\n                muted\r\n                ref={myVideo}\r\n                autoPlay\r\n                style={{ width: \"300px\" }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"video\">\r\n            {callAccepted && !callEnded ? (\r\n              <video\r\n                playsInline\r\n                ref={userVideo}\r\n                autoPlay\r\n                style={{ width: \"300px\" }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"myId\">\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Name\"\r\n            variant=\"filled\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            style={{ marginBottom: \"20px\" }}\r\n          />\r\n          <CopyToClipboard text={me} style={{ marginBottom: \"2rem\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AssignmentIcon fontSize=\"large\" />}\r\n            >\r\n              Copy ID\r\n            </Button>\r\n          </CopyToClipboard>\r\n\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            label=\"ID to call\"\r\n            variant=\"filled\"\r\n            value={idToCall}\r\n            onChange={(e) => setIdToCall(e.target.value)}\r\n          />\r\n          <div className=\"call-button\">\r\n            {callAccepted && !callEnded ? (\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\r\n                End Call\r\n              </Button>\r\n            ) : (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"call\"\r\n                onClick={() => callUser(idToCall)}\r\n              >\r\n                <PhoneIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            )}\r\n            {idToCall}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {receivingCall && !callAccepted ? (\r\n            <div className=\"caller\">\r\n              <h1>{name} is calling...</h1>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                Answer\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meeting;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, IconButton, Toolbar, Collapse } from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    fontFamily: 'Poppins',\r\n    minHeight:'100vh',\r\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/2.jpg'})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\"\r\n  },\r\n  appbar: {\r\n    background: 'none',\r\n  },\r\n  appbarWrapper: {\r\n    width: '80%',\r\n    margin: '0 auto',\r\n  },\r\n  appbarTitle: {\r\n    flexGrow: '1',\r\n    color:'#fff'\r\n  },\r\n  icon: {\r\n    color: '#fff',\r\n    fontSize: '2rem',\r\n  },\r\n  colorText: {\r\n    color: '#5AFF3D',\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    color: '#fff',\r\n    fontSize: '4.5rem',\r\n  },\r\n  goDown: {\r\n    color: '#fff',\r\n    fontSize: '4rem',\r\n  },\r\n}));\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [expand,setExpand] = useState(false);\r\n  const onExpand = () => {\r\n      setExpand(!expand)\r\n  }\r\n  useEffect(() => {\r\n    setChecked(true);\r\n  }, []);\r\n  return (\r\n    <div className={classes.root} id=\"header\">\r\n      <AppBar className={classes.appbar} elevation={0}>\r\n        <Toolbar className={classes.appbarWrapper}>\r\n          <h1 className={classes.appbarTitle}>\r\n              Microsoft Teams\r\n          </h1>\r\n          <IconButton>\r\n            <SortIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Collapse\r\n        in={checked}\r\n        {...(checked ? { timeout: 2000 } : {})}\r\n        collapsedHeight={0}\r\n      >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Welcome to Teams,\r\n          </h1>\r\n            <IconButton>\r\n              {expand ? <ExpandLessIcon className = {classes.goDown} onClick ={onExpand} />\r\n              : '' }\r\n              {!expand ? <ExpandMoreIcon className = {classes.goDown} onClick ={onExpand} /> : ''}\r\n              {expand ? <Button href = \"/meeting\" variant =\"contained\" color = \"primary\" align = \"center\">\r\n                    Join or create a meeting\r\n                </Button> : ''}\r\n            </IconButton>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}","\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport Home from \"./components/Home\"\nimport Meeting from \"./components/Meeting\"\nimport Header from \"./components/Header\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { CssBaseline } from \"@material-ui/core\"\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nfunction App() {\n  return (\n      <div>\n        <CssBaseline />\n        <Router>\n          <Switch>\n            <Route exact path = '/'>\n              <Header />\n            </Route>\n            <Route exact path = '/meeting'>\n              <Meeting />\n            </Route>\n          </Switch>\n        </ Router>\n      </div>\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}